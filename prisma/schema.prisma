// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  STAFF
  EVENT_OWNER
}

enum EventStatus {
  DRAFT
  PUBLISHED
  CANCELLED
  COMPLETED
}

enum RSVPStatus {
  PENDING
  CONFIRMED
  DECLINED
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      UserRole @default(EVENT_OWNER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  events Event[]

  @@map("users")
}

model Event {
  id          String      @id @default(cuid())
  title       String
  description String?
  location    String?
  startDate   DateTime
  endDate     DateTime?
  maxAttendees Int?
  status      EventStatus @default(DRAFT)
  isPublic    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  creatorId String
  creator   User   @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  rsvps     RSVP[]

  @@map("events")
}

model RSVP {
  id        String     @id @default(cuid())
  name      String
  email     String
  phone     String?
  message   String?
  status    RSVPStatus @default(PENDING)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  // Relations
  eventId String
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([eventId, email])
  @@map("rsvps")
}